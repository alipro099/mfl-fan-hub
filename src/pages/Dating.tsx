import { useState } from "react";
import { Newspaper, MessageCircle, ThumbsUp, Share2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";

interface NewsItem {
  id: number;
  type: "game" | "debate" | "opinion";
  title: string;
  content: string;
  author: string;
  team?: string;
  time: string;
  likes: number;
  comments: number;
  emoji: string;
}

const Dating = () => {
  const [news] = useState<NewsItem[]>([
    {
      id: 1,
      type: "game",
      title: "–ê–º–∫–∞–ª —Ä–∞–∑–≥—Ä–æ–º–∏–ª –õ–µ–≥–∏–æ–Ω 5:2!",
      content: "–ù–µ–≤–µ—Ä–æ—è—Ç–Ω—ã–π –º–∞—Ç—á –≤ —Ç—Ä–µ—Ç—å–µ–º —Ç—É—Ä–µ. –•–µ—Ç-—Ç—Ä–∏–∫ –æ—Ç –∫–∞–ø–∏—Ç–∞–Ω–∞ –∫–æ–º–∞–Ω–¥—ã!",
      author: "–ú–§–õ –ù–æ–≤–æ—Å—Ç–∏",
      time: "2 —á–∞—Å–∞ –Ω–∞–∑–∞–¥",
      likes: 234,
      comments: 45,
      emoji: "‚öΩ",
    },
    {
      id: 2,
      type: "debate",
      title: "–ö—Ç–æ –ª—É—á—à–∏–π –Ω–∞–ø–∞–¥–∞—é—â–∏–π —Å–µ–∑–æ–Ω–∞?",
      content: "–°–ø–æ—Ä –º–µ–∂–¥—É —Ñ–∞–Ω–∞—Ç–∞–º–∏ –ê–º–∫–∞–ª–∞ –∏ –°–º–µ—à–∞—Ä–∏–∫–æ–≤ —Ä–∞–∑–≥–æ—Ä–µ–ª—Å—è –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–∞—Ç—á–µ–π. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≥–æ–≤–æ—Ä–∏—Ç –æ–¥–Ω–æ, –Ω–æ —ç–º–æ—Ü–∏–∏ ‚Äî –¥—Ä—É–≥–æ–µ!",
      author: "–ê–ª–µ–∫—Å–µ–π",
      team: "–ê–º–∫–∞–ª",
      time: "5 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
      likes: 156,
      comments: 89,
      emoji: "üî•",
    },
    {
      id: 3,
      type: "opinion",
      title: "–ú–§–õ –º–µ–Ω—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç –ø–ª–µ–π-–æ—Ñ—Ñ?",
      content: "–ò–Ω—Å–∞–π–¥–µ—Ä—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —Ç—É—Ä–Ω–∏—Ä–Ω–æ–π —Ç–∞–±–ª–∏—Ü–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Å–µ–∑–æ–Ω–∞.",
      author: "–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –æ–±–æ–∑—Ä–µ–≤–∞—Ç–µ–ª—å",
      time: "8 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥",
      likes: 412,
      comments: 127,
      emoji: "üí≠",
    },
    {
      id: 4,
      type: "game",
      title: "–†–µ–∫–æ—Ä–¥ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –ø–æ–±–∏—Ç!",
      content: "–ù–∞ –º–∞—Ç—á –õ–µ–≥–∏–æ–Ω vs –°–º–µ—à–∞—Ä–∏–∫–∏ –ø—Ä–∏—à–ª–æ –±–æ–ª–µ–µ 5000 –∑—Ä–∏—Ç–µ–ª–µ–π. –ù–æ–≤—ã–π —Ä–µ–∫–æ—Ä–¥ –ú–§–õ!",
      author: "–ú–§–õ –ù–æ–≤–æ—Å—Ç–∏",
      time: "1 –¥–µ–Ω—å –Ω–∞–∑–∞–¥",
      likes: 567,
      comments: 203,
      emoji: "üèÜ",
    },
  ]);

  const getTypeLabel = (type: string) => {
    switch (type) {
      case "game": return "–ú–∞—Ç—á";
      case "debate": return "–°–ø–æ—Ä";
      case "opinion": return "–ú–Ω–µ–Ω–∏–µ";
      default: return type;
    }
  };

  const getTypeBadgeColor = (type: string) => {
    switch (type) {
      case "game": return "bg-primary text-primary-foreground";
      case "debate": return "bg-destructive text-destructive-foreground";
      case "opinion": return "bg-secondary text-secondary-foreground";
      default: return "bg-muted text-muted-foreground";
    }
  };

  const filterNews = (type?: string) => {
    if (!type) return news;
    return news.filter(item => item.type === type);
  };

  const NewsCard = ({ item }: { item: NewsItem }) => (
    <Card className="overflow-hidden border-border bg-card hover:border-primary/50 transition-all">
      <div className="p-4 space-y-3">
        <div className="flex items-start gap-3">
          <div className="text-4xl">{item.emoji}</div>
          <div className="flex-1 space-y-2">
            <div className="flex items-center gap-2 flex-wrap">
              <Badge className={getTypeBadgeColor(item.type)}>
                {getTypeLabel(item.type)}
              </Badge>
              {item.team && (
                <Badge variant="outline" className="border-primary/50">
                  {item.team}
                </Badge>
              )}
            </div>
            <h3 className="text-lg font-bold">{item.title}</h3>
            <p className="text-sm text-muted-foreground">{item.content}</p>
          </div>
        </div>

        <div className="flex items-center justify-between text-sm text-muted-foreground">
          <div className="space-y-1">
            <div className="font-medium text-foreground">{item.author}</div>
            <div>{item.time}</div>
          </div>
        </div>

        <div className="flex gap-2 pt-2 border-t border-border">
          <Button variant="ghost" size="sm" className="flex-1 gap-2">
            <ThumbsUp className="w-4 h-4" />
            {item.likes}
          </Button>
          <Button variant="ghost" size="sm" className="flex-1 gap-2">
            <MessageCircle className="w-4 h-4" />
            {item.comments}
          </Button>
          <Button variant="ghost" size="sm" className="gap-2">
            <Share2 className="w-4 h-4" />
          </Button>
        </div>
      </div>
    </Card>
  );

  return (
    <div className="p-4 space-y-6 animate-slide-up">
      {/* Header */}
      <div className="text-center space-y-2 pt-4">
        <Newspaper className="w-12 h-12 text-primary mx-auto animate-glow-pulse" />
        <h1 className="text-3xl font-bold">–ß—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?</h1>
        <p className="text-muted-foreground">–ù–æ–≤–æ—Å—Ç–∏, —Å–ø–æ—Ä—ã –∏ –º–Ω–µ–Ω–∏—è –ú–§–õ</p>
      </div>

      {/* Tabs */}
      <Tabs defaultValue="all" className="w-full">
        <TabsList className="w-full grid grid-cols-4">
          <TabsTrigger value="all">–í—Å–µ</TabsTrigger>
          <TabsTrigger value="game">–ú–∞—Ç—á–∏</TabsTrigger>
          <TabsTrigger value="debate">–°–ø–æ—Ä—ã</TabsTrigger>
          <TabsTrigger value="opinion">–ú–Ω–µ–Ω–∏—è</TabsTrigger>
        </TabsList>

        <TabsContent value="all" className="space-y-4 mt-6">
          {news.map((item) => (
            <NewsCard key={item.id} item={item} />
          ))}
        </TabsContent>

        <TabsContent value="game" className="space-y-4 mt-6">
          {filterNews("game").map((item) => (
            <NewsCard key={item.id} item={item} />
          ))}
        </TabsContent>

        <TabsContent value="debate" className="space-y-4 mt-6">
          {filterNews("debate").map((item) => (
            <NewsCard key={item.id} item={item} />
          ))}
        </TabsContent>

        <TabsContent value="opinion" className="space-y-4 mt-6">
          {filterNews("opinion").map((item) => (
            <NewsCard key={item.id} item={item} />
          ))}
        </TabsContent>
      </Tabs>
    </div>
  );
};

export default Dating;
